% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anem_preparation.R
\name{define_recharge}
\alias{define_recharge}
\title{Define aquifer recharge}
\usage{
define_recharge(recharge_params, recharge_type, recharge_vector, aquifer,
  ...)
}
\arguments{
\item{recharge_type}{Type of recharge gradient. One of "F" (uniform flow),
"H" (head boundaries), or "D" (recharge divide)}

\item{recharge_vector}{A numeric vector containing \code{c(x1, y1, x2, y2)}}

\item{aquifer}{Aquifer containing \code{aquifer_type}, \code{Ksat}, and if necessary \code{h0} and \code{z0}}

\item{...}{See details for required and optional parameters}

\item{params}{A list containing any of the named or unnamed (i.e, in \code{...}) input parameters.
If any named arguments are missing, they will be replaced by items in this list.}
}
\value{
The function returns a list containing two elements:
\describe{
\item{recharge_params}{A list of all required parameters for recharge_func, as described above in the "Details" section.}
\item{recharge_func}{A function that takes \code{recharge_params} and {aquifer} as inputs}
}
}
\description{
Define recharge as undisturbed water table gradients. Note that recharge acts as if the
aquifer boundaries did not exist. Therefore, when parameterizing recharge, care must be taken
to ensure only plausible scenarios.
}
\details{
This function defines recharge to the aquifer by defining the undisturbed water
table profile. In addition to the named parameters, each \code{recharge_type} has additional
parameters that must be specified as named arguments in \code{recharge_params} or \code{...}:
\describe{
\item{Constant flow, "F"}{This allows a uniform constant flow in the direction of the
\code{recharge_vector}. Flow is specified as cumec/m, where the length dimension in the
denominator is perpendicular to the recharge vector. This \code{recharge_type} requires parameters:
\itemize{
\item \code{x0, y0}: Coordinate locations where undisturbed head is equal to \code{aquifer$h0}
\item \code{flow}: Flow in cumec
}
}
\item{Head boundaries, "H"}{NOT YET IMPLEMENTED. This allows the head profile to be specified by 2 or 3 points,
where the result is steady uniform flow determined by the hydraulic gradient between head at the \code{recharge_vector}
origin and head at the other 1 (or 2) point(s). Note that \code{aquifer$h0} is ignored with this option.
This \code{recharge_type} requires parameters:
\itemize{
\item \code{h1}: Hydraulic head at \code{x1, y1}
\item \code{h2}: Hydraulic head at \code{x2, y2}
\item \code{x3, y3, h3}: Optional coordinate location \code{x3, y3} and hydraulic head \code{h3} at a third point.
If this is specified, there will be a watershed divide
}
}
\item{Recharge divide, "D"}{This allows a uniform constant flow in opposite directions on
both sides of a divide. The divide goes through the \code{recharge_vector} origin \code{x1, y1}
and is perpendicular to the \code{recharge_vector}. Flow on either side is specified as cumec/m, where the length dimension in the
denominator is parallel to the to the recharge divide. This \code{recharge_type} requires parameters:
\itemize{
\item \code{x0, y0}: Coordinate locations where undisturbed head is equal to \code{aquifer$h0}
\item \code{flow_main}: Flow in the direction of the \code{recharge_vector}.
\item \code{flow_opp}: Flow in the opposite direction of the \code{recharge_vector}.
Positive value means flow away from divide.
}
}
}
}
\examples{
aquifer <- define_aquifer("confined",Ksat=0.001,z0=10,h0=100)
recharge_params <- list(recharge_type="F",recharge_vector=c(0,0,3,3),flow=1,x0=3,y0=3)
define_recharge(recharge_params,aquifer=aquifer)

recharge_params <- list(recharge_type="F",recharge_vector=c(0,0,3,3),aquifer=aquifer,flow=1,x0=3,y0=3)
define_recharge(recharge_params)

aquifer <- define_aquifer("unconfined",Ksat=0.001,h0=100)
recharge_params <- list(recharge_type="F",recharge_vector=c(0,0,3,3),flow=1,x0=3,y0=3)
define_recharge(recharge_params, aquifer=aquifer)

aquifer <- define_aquifer("confined",Ksat=1,z0=10,h0=0)
recharge_params <- list(recharge_type="D",recharge_vector=c(0,0,1,1),aquifer=aquifer,flow_main=1,flow_opp=1,x0=1,y0=1)
define_recharge(recharge_params)
}
