% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anem_potentials.R
\name{get_flowdir}
\alias{get_flowdir}
\title{Numerically calculate flow direction}
\usage{
get_flowdir(loc, wells, h0, Ksat, z0 = NA, aquifer_type,
  show_progress = FALSE)
}
\arguments{
\item{loc}{coordinates vector as c(x,y), with units of [m]}

\item{wells}{wells object with each row containing rate Q [m^3/s], diam [m],
radius of influence roi [m], & coordinates x0 [m], y0 [m]}

\item{h0}{resting hydraulic head [m] of the aquifer without any pumping. For
an unconfined aquifer, this must be the thickness of the water table.}

\item{Ksat}{saturated hydraulic conductivity [m/s]}

\item{z0}{thickness of the confined aquifer (confining case only)}

\item{aquifer_type}{"confined" or "unconfined". Determines the calculation
and output units.}

\item{show_progress}{Boolean input parameter. If true and there are >20 combinations of
wells and locations, then a progress bar will be printed.}
}
\value{
Outputs the flow direction in the x and y directions. If the input \code{loc} is
  a numeric \code{c(x,y)}, then the output is in the same format. If the input is a data.frame,
  then the output is also a dataframe with columns \code{dx} and \code{dy}. The two values
  indicate the flow direction, and are equivalent to \eqn{-dh/dx}
  and \eqn{-dh/dy}.
}
\description{
Calculates the numerical derivative of hydraulic head in x and y directions, returning \eqn{-dh/dx}
  and \eqn{-dh/dy}.
}
\examples{
wells <- data.frame(x0=c(0,0.5),y0=c(0,0.25),rate=c(1e-3,-2e-3),diam=c(0.75,0.8),roi=c(300,300))
get_flowdir(wells,loc=c(5,5),h0=0,Ksat=0.00001,z0=30,aquifer_type="confined")
get_flowdir(wells,loc=c(5,5),h0=30,Ksat=0.00001,aquifer_type="unconfined")

grid_pts <- expand.grid(x=seq(0,10,by=5),y=seq(0,10,by=5))
get_flowdir(wells,loc=grid_pts,h0=30,Ksat=0.00001,aquifer_type="unconfined")

# Injection and pumping well along diagonal line
wells2 <- data.frame(x0=c(-10,10),y0=c(-10,10),rate=c(1e-3,-1e-3),diam=c(0.1,0.1),roi=c(300,300))
grid_pts2 <- data.frame(x=c(-11,0,11),y=c(-11,0,11))
fd2 <- get_flowdir(wells2,loc=grid_pts2,h0=30,Ksat=0.00001,aquifer_type="unconfined")

# Two pumping wells along diagonal line
wells3 <- data.frame(x0=c(-10,10),y0=c(-10,10),rate=c(-1e-3,-1e-3),diam=c(0.1,0.1),roi=c(300,300))
grid_pts3 <- data.frame(x=c(-3,-3,0,3,3),y=c(-3,3,0,-3,3))
fd3 <- get_flowdir(wells3,loc=grid_pts3,h0=30,Ksat=0.00001,aquifer_type="unconfined")

## plot the flow directions
# scale dx and dy for visualization
fd3_grid <- grid_pts3 \%>\% cbind(fd3) \%>\%
   dplyr::mutate(dx_norm=dx*50,dy_norm=dy*50,x2=x+dx_norm,y2=y+dy_norm) # normaliz
# alternatively, apply nonlinear scaling to dx and dy for visualization
fd3_grid <- grid_pts3 \%>\% cbind(fd3) \%>\%
  dplyr::mutate(angle=atan(dx/dy),mag=sqrt(dx^2+dy^2),mag_norm=mag^(1/2)*5,
                dx_norm=mag_norm*cos(angle)*sign(dx),dy_norm=mag_norm*sin(angle)*sign(dx),
                x2=x+dx_norm,y2=y+dy_norm)

library(ggplot2)
ggplot(fd3_grid,aes(x,y)) + geom_point(size=2,shape=1) + geom_segment(aes(xend=x2,yend=y2),arrow=arrow(type="closed",length=unit(2,"mm"))) + coord_equal()
}
