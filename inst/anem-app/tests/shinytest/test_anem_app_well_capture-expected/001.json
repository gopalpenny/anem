{
  "input": {
    "aquifer_type": "confined",
    "aquifermode": "recharge",
    "b1_type": "NF",
    "b2_type": "NF",
    "b3_type": "NF",
    "b4_type": "NF",
    "captureParticles": 4,
    "clearMap": 0,
    "deleteParticle": 0,
    "deleteWell": 0,
    "diam": 1,
    "enableRecharge": true,
    "exampleUpload": "None",
    "fileUpload": null,
    "h0": 50,
    "headNgrid": 100,
    "headNlevels": 10,
    "headNupgrade": 200,
    "Ksat": 0.001,
    "linkmaps": true,
    "linkmaps_results": true,
    "maintabs": "results",
    "max_tracking_time_years": 5,
    "particletable_cell_clicked": {

    },
    "particletable_rows_all": null,
    "particletable_rows_current": null,
    "particletable_rows_selected": null,
    "particletable_search": "",
    "particletable_state": null,
    "porosity": 0.35,
    "prepmap_bounds": {
      "north": 41.9063653897096,
      "east": -85.8183288574219,
      "south": 41.4447852315432,
      "west": -86.6848754882813
    },
    "prepmap_center": {
      "lng": -86.252,
      "lat": 41.676
    },
    "prepmap_groups": "Map",
    "prepmap_zoom": 10,
    "pumpingtime_months": 64,
    "Q": -0.3,
    "rechargeFlow": 1e-05,
    "resetZoomLink": 0,
    "resetZoomLink_results": 0,
    "resultsmap_bounds": {
      "north": 41.9063653897096,
      "east": -85.8183288574219,
      "south": 41.4447852315432,
      "west": -86.6848754882813
    },
    "resultsmap_center": {
      "lng": -86.252,
      "lat": 41.676
    },
    "resultsmap_zoom": 10,
    "resultsmode": "resultshead",
    "storativity": 0.35,
    "update_head": false,
    "update_head_results": false,
    "update_images": false,
    "update_images_results": false,
    "update_particles": false,
    "update_particles_results": false,
    "usermode": "particles",
    "well_group": "A",
    "well_weight": 1,
    "wellCapture": true,
    "welltab": "newwell",
    "welltable_cell_clicked": {

    },
    "welltable_head_cell_clicked": {

    },
    "welltable_head_rows_all": null,
    "welltable_head_rows_current": null,
    "welltable_head_rows_selected": null,
    "welltable_head_search": "",
    "welltable_head_state": null,
    "welltable_rows_all": null,
    "welltable_rows_current": null,
    "welltable_rows_selected": null,
    "welltable_search": "",
    "welltable_state": null,
    "welltableres_cell_clicked": {

    },
    "welltableres_rows_all": null,
    "welltableres_rows_current": null,
    "welltableres_rows_selected": null,
    "welltableres_search": "",
    "welltableres_state": null,
    "z0": 5
  },
  "output": {
    "drawdowntable": "<table  class = 'table shiny-table table- spacing-s' style = 'width:auto;'>\n<thead> <tr> <th style='text-align: left;'> var <\/th> <th style='text-align: right;'> pot <\/th> <th style='text-align: left;'> description <\/th>  <\/tr> <\/thead> <tbody>\n  <\/tbody> <\/table>",
    "particletable": {
      "x": {
        "filter": "none",
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>pID<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>selected<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "searching": false,
          "lengthChange": false,
          "autoWidth": true,
          "columnDefs": [
            {
              "className": "dt-right",
              "targets": [
                0,
                1,
                2
              ]
            }
          ],
          "order": [

          ],
          "orderClasses": false,
          "rowCallback": "function(row, data) {\nvar value=data[3]; $(row).css({'background-color':value == false ? \"white\" : value == true ? \"pink\" : value});\n}",
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row"
        }
      },
      "evals": [
        "options.rowCallback",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "dt-core",
          "version": "1.10.19",
          "src": {
            "href": "dt-core-1.10.19"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "jquery",
          "version": "1.11.3",
          "src": {
            "href": "jquery-1.11.3"
          },
          "meta": null,
          "script": "jquery.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "crosstalk",
          "version": "1.0.0",
          "src": {
            "href": "crosstalk-1.0.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "prepmap": {
      "x": {
        "options": {
          "crs": {
            "crsClass": "L.CRS.EPSG3857",
            "code": null,
            "proj4def": null,
            "projectedBounds": null,
            "options": {

            }
          }
        },
        "calls": [
          {
            "method": "addTiles",
            "args": [
              "//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              null,
              "Map",
              {
                "errorTileUrl": "",
                "noWrap": true,
                "detectRetina": false,
                "attribution": "&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap<\/a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA<\/a>"
              }
            ]
          },
          {
            "method": "addProviderTiles",
            "args": [
              "Esri.WorldImagery",
              null,
              "Satellite",
              {
                "errorTileUrl": "",
                "noWrap": false,
                "detectRetina": false
              }
            ]
          },
          {
            "method": "addScaleBar",
            "args": [
              {
                "maxWidth": 100,
                "metric": true,
                "imperial": true,
                "updateWhenIdle": true,
                "position": "bottomright"
              }
            ]
          },
          {
            "method": "addLayersControl",
            "args": [
              [
                "Map",
                "Satellite"
              ],
              [

              ],
              {
                "collapsed": false,
                "autoZIndex": true,
                "position": "topright"
              }
            ]
          }
        ],
        "setView": [
          [
            41.676,
            -86.252
          ],
          10,
          [

          ]
        ]
      },
      "evals": [

      ],
      "jsHooks": {
        "render": [
          {
            "code": "function(el, x, data) {\n  return (\n      function(el, x, data) {\n      // get the leaflet map\n      var map = this; //HTMLWidgets.find('#' + el.id);\n      // we need a new div element because we have to handle\n      // the mouseover output separately\n      // debugger;\n      function addElement () {\n      // generate new div Element\n      var newDiv = $(document.createElement('div'));\n      // append at end of leaflet htmlwidget container\n      $(el).append(newDiv);\n      //provide ID and style\n      newDiv.addClass('lnlt');\n      newDiv.css({\n      'position': 'relative',\n      'bottomleft':  '0px',\n      'background-color': 'rgba(255, 255, 255, 0.7)',\n      'box-shadow': '0 0 2px #bbb',\n      'background-clip': 'padding-box',\n      'margin': '0',\n      'padding-left': '5px',\n      'color': '#333',\n      'font': '9px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif',\n      'z-index': '700',\n      });\n      return newDiv;\n      }\n\n\n      // check for already existing lnlt class to not duplicate\n      var lnlt = $(el).find('.lnlt');\n\n      if(!lnlt.length) {\n      lnlt = addElement();\n\n      // grab the special div we generated in the beginning\n      // and put the mousmove output there\n\n      map.on('mousemove', function (e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\n      lnlt.text(\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\n                           ' | zoom: ' + map.getZoom() +\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\n                           ' | epsg: 3857 ' +\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\n      } else {\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\n      lnlt.text(\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\n                      ' | zoom: ' + map.getZoom() + ' ');\n      }\n      });\n\n      // remove the lnlt div when mouse leaves map\n      map.on('mouseout', function (e) {\n      var strip = document.querySelector('.lnlt');\n      strip.remove();\n      });\n\n      };\n\n      //$(el).keypress(67, function(e) {\n      map.on('preclick', function(e) {\n      if (e.originalEvent.ctrlKey) {\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\n      lnlt.text(\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\n                      ' | zoom: ' + map.getZoom() + ' ');\n      var txt = document.querySelector('.lnlt').textContent;\n      console.log(txt);\n      //txt.innerText.focus();\n      //txt.select();\n      setClipboardText('\"' + txt + '\"');\n      }\n      });\n\n      //map.on('click', function (e) {\n      //  var txt = document.querySelector('.lnlt').textContent;\n      //  console.log(txt);\n      //  //txt.innerText.focus();\n      //  //txt.select();\n      //  setClipboardText(txt);\n      //});\n\n      function setClipboardText(text){\n      var id = 'mycustom-clipboard-textarea-hidden-id';\n      var existsTextarea = document.getElementById(id);\n\n      if(!existsTextarea){\n      console.log('Creating textarea');\n      var textarea = document.createElement('textarea');\n      textarea.id = id;\n      // Place in top-left corner of screen regardless of scroll position.\n      textarea.style.position = 'fixed';\n      textarea.style.top = 0;\n      textarea.style.left = 0;\n\n      // Ensure it has a small width and height. Setting to 1px / 1em\n      // doesn't work as this gives a negative w/h on some browsers.\n      textarea.style.width = '1px';\n      textarea.style.height = '1px';\n\n      // We don't need padding, reducing the size if it does flash render.\n      textarea.style.padding = 0;\n\n      // Clean up any borders.\n      textarea.style.border = 'none';\n      textarea.style.outline = 'none';\n      textarea.style.boxShadow = 'none';\n\n      // Avoid flash of white box if rendered for any reason.\n      textarea.style.background = 'transparent';\n      document.querySelector('body').appendChild(textarea);\n      console.log('The textarea now exists :)');\n      existsTextarea = document.getElementById(id);\n      }else{\n      console.log('The textarea already exists :3')\n      }\n\n      existsTextarea.value = text;\n      existsTextarea.select();\n\n      try {\n      var status = document.execCommand('copy');\n      if(!status){\n      console.error('Cannot copy text');\n      }else{\n      console.log('The text is now on the clipboard');\n      }\n      } catch (err) {\n      console.log('Unable to copy.');\n      }\n      }\n\n\n      }\n      ).call(this.getMap(), el, x, data);\n}",
            "data": null
          }
        ]
      },
      "deps": [
        {
          "name": "leaflet-providers",
          "version": "1.9.0",
          "src": {
            "href": "leaflet-providers-1.9.0"
          },
          "meta": null,
          "script": "leaflet-providers_1.9.0.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "leaflet-providers-plugin",
          "version": "2.0.3",
          "src": {
            "href": "leaflet-providers-plugin-2.0.3"
          },
          "meta": null,
          "script": "leaflet-providers-plugin.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "prepmaptitle": "Initiate particles",
    "resultsmap": {
      "x": {
        "options": {
          "crs": {
            "crsClass": "L.CRS.EPSG3857",
            "code": null,
            "proj4def": null,
            "projectedBounds": null,
            "options": {

            }
          }
        },
        "calls": [
          {
            "method": "addTiles",
            "args": [
              "//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
              null,
              "Map",
              {
                "errorTileUrl": "",
                "noWrap": true,
                "detectRetina": false,
                "attribution": "&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap<\/a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA<\/a>"
              }
            ]
          },
          {
            "method": "addProviderTiles",
            "args": [
              "Esri.WorldImagery",
              null,
              "Satellite",
              {
                "errorTileUrl": "",
                "noWrap": false,
                "detectRetina": false
              }
            ]
          },
          {
            "method": "addScaleBar",
            "args": [
              {
                "maxWidth": 100,
                "metric": true,
                "imperial": true,
                "updateWhenIdle": true,
                "position": "bottomright"
              }
            ]
          },
          {
            "method": "addLayersControl",
            "args": [
              [
                "Map",
                "Satellite"
              ],
              [

              ],
              {
                "collapsed": false,
                "autoZIndex": true,
                "position": "topright"
              }
            ]
          }
        ],
        "setView": [
          [
            41.676,
            -86.252
          ],
          10,
          [

          ]
        ]
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "leaflet-providers",
          "version": "1.9.0",
          "src": {
            "href": "leaflet-providers-1.9.0"
          },
          "meta": null,
          "script": "leaflet-providers_1.9.0.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "leaflet-providers-plugin",
          "version": "2.0.3",
          "src": {
            "href": "leaflet-providers-plugin-2.0.3"
          },
          "meta": null,
          "script": "leaflet-providers-plugin.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "resultsmaptitle": "Results",
    "welltable": {
      "x": {
        "filter": "none",
        "editable": {
          "target": "cell",
          "disable": {
            "columns": null
          }
        },
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>Q<\/th>\n      <th>R<\/th>\n      <th>diam<\/th>\n      <th>Group<\/th>\n      <th>Weight<\/th>\n      <th>x<\/th>\n      <th>y<\/th>\n      <th>wID<\/th>\n      <th>selected<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "searching": false,
          "lengthChange": false,
          "pageLength": 50,
          "autoWidth": true,
          "columnDefs": [
            {
              "className": "dt-right",
              "targets": [
                0,
                1,
                2,
                4,
                5,
                6,
                7
              ]
            }
          ],
          "order": [

          ],
          "orderClasses": false,
          "rowCallback": "function(row, data) {\nvar value=data[8]; $(row).css({'background-color':value == false ? \"white\" : value == true ? \"lightgray\" : value});\n}",
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row"
        }
      },
      "evals": [
        "options.rowCallback",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "dt-core",
          "version": "1.10.19",
          "src": {
            "href": "dt-core-1.10.19"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "jquery",
          "version": "1.11.3",
          "src": {
            "href": "jquery-1.11.3"
          },
          "meta": null,
          "script": "jquery.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "crosstalk",
          "version": "1.0.0",
          "src": {
            "href": "crosstalk-1.0.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "welltable_head": {
      "x": {
        "filter": "none",
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>wID<\/th>\n      <th>Head, m<\/th>\n      <th>Drawdown, m<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "searching": false,
          "lengthChange": false,
          "autoWidth": true,
          "pageLength": 50,
          "columnDefs": [
            {
              "width": "200px",
              "targets": "_all"
            },
            {
              "className": "dt-right",
              "targets": [
                1,
                2
              ]
            }
          ],
          "order": [

          ],
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row"
        }
      },
      "evals": [
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "dt-core",
          "version": "1.10.19",
          "src": {
            "href": "dt-core-1.10.19"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "jquery",
          "version": "1.11.3",
          "src": {
            "href": "jquery-1.11.3"
          },
          "meta": null,
          "script": "jquery.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "crosstalk",
          "version": "1.0.0",
          "src": {
            "href": "crosstalk-1.0.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "welltableres": {
      "x": {
        "filter": "none",
        "editable": {
          "target": "cell",
          "disable": {
            "columns": null
          }
        },
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th>Q<\/th>\n      <th>diam<\/th>\n      <th>Group<\/th>\n      <th>selected<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "searching": false,
          "lengthChange": false,
          "autoWidth": true,
          "pageLength": 50,
          "columnDefs": [
            {
              "className": "dt-right",
              "targets": [
                0,
                1
              ]
            }
          ],
          "order": [

          ],
          "orderClasses": false,
          "rowCallback": "function(row, data) {\nvar value=data[3]; $(row).css({'background-color':value == false ? \"white\" : value == true ? \"lightgray\" : value});\n}",
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row"
        }
      },
      "evals": [
        "options.rowCallback",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "dt-core",
          "version": "1.10.19",
          "src": {
            "href": "dt-core-1.10.19"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "jquery",
          "version": "1.11.3",
          "src": {
            "href": "jquery-1.11.3"
          },
          "meta": null,
          "script": "jquery.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "crosstalk",
          "version": "1.0.0",
          "src": {
            "href": "crosstalk-1.0.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    }
  },
  "export": {

  }
}
