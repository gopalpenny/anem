} else {
x_loc <- loc[1]
y_loc <- loc[2]
}
x_loc
y_loc
ni <- length(x_well) # number of wells
mj <- length(x_loc) # number of locations to measure potential
mj
# create mj x ni matrices -- rows j vary for locations, columns i for wells
xi <- matrix(rep(x_well,each=mj,nrow=ni), ncol=ni) # mj x ni matrix
yi <- matrix(rep(y_well,each=mj,nrow=ni), ncol=ni) # mj x ni matrix
xi
yi
xj <- matrix(rep(x_loc,ni,nrow=ni), ncol=ni)
yj <- matrix(rep(y_loc,ni,nrow=ni), ncol=ni)
xj
yj
Ri <- matrix(rep(R,each=mj),ncol=ni)
di <- matrix(rep(diam_wells,each=mj),ncol=ni)
Ri
R
wells <- data.frame(x = rnorm(nwells), y = rnorm(nwells), roi = 1:nwells, diam_wells = runif(nwells,0.3,2))
R <- wells$roi
wells <- data.frame(x = rnorm(nwells), y = rnorm(nwells), roi = 1:nwells, diam = runif(nwells,0.3,2))
R <- wells$roi
diam_wells <- wells$diam
Ri <- matrix(rep(R,each=mj),ncol=ni)
di <- matrix(rep(diam_wells,each=mj),ncol=ni)
Ri
di
rji <- pmax(pmin(sqrt((xi-xj)^2 + (yi-yj)^2), Ri), di/2)
rji
dP <- log(rji/Ri)/pi/1e-4
dP
dP <- rowSums(log(rji/Ri)/pi/1e-4)
dP
rji %*% 1/R
rji %*% (1/R)
(1/R)
rji %*% (1/R)
rowSums(log(rji/Ri)/pi/1e-4)
setwd("/Users/gopal/Projects/Indus/jhelum/src/plot")
pers <- readRDS("../../data/format/precip_persiann_mangla_grid.rds") %>% filter(!small) %>% select(-small) %>%
mutate(post2000=factor(date>="2000-01-01",levels=c(F,T),labels=c('Pre_2000','Post_2000'))) %>%
mutate(year=as.integer(strftime(date,"%Y")))
ggsub <- function(x,pattern,replacement) {
return(gsub(pattern,replacement,x))
}
fao_ch6 <- read_html("/Users/gopal/Dropbox/Berkeley/Research/Resources and Other/FAO_evapotranspiration/Chapter 6 - ETc - Single crop coefficient (Kc).html")
suppressMessages(library("rvest"))
suppressMessages(library("tidyverse"))
suppressMessages(library("stringi"))
group_name <- "scrape_fao_coefficients" # name of plot_(group name).R
ggsub <- function(x,pattern,replacement) {
return(gsub(pattern,replacement,x))
}
group_name <- "scrape_fao56" # name of plot_(group name).R
er
ggsub <- function(x,pattern,replacement) {
return(gsub(pattern,replacement,x))
}
fao_ch6 <- read_html("/Users/gopal/Dropbox/Berkeley/Research/Resources and Other/FAO_evapotranspiration/Chapter 6 - ETc - Single crop coefficient (Kc).html")
fao_ch6
# file accessed on Nov 14, 2019
fao_ch6 <- read_html("/Users/gopal/Dropbox/Berkeley/Research/Resources and Other/FAO_evapotranspiration/Chapter 6 - ETc - Single crop coefficient (Kc).html")
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
# file accessed on Nov 14, 2019
fao_ch6_html <- read_html("/Users/gopal/Dropbox/Berkeley/Research/Resources and Other/FAO_evapotranspiration/Chapter 6 - ETc - Single crop coefficient (Kc).html")
river_raw_1 <- fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
river_raw_1
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table")
river_raw_1 <- fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table/tbody") %>%
html_table()
river_raw_1
river_raw_1 <- fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
river_raw_1 <- fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
river_raw_1
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
fao_ch6_html
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table")
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
fao_ch6_html <- html("/Users/gopal/Dropbox/Berkeley/Research/Resources and Other/FAO_evapotranspiration/Chapter 6 - ETc - Single crop coefficient (Kc).html")
fao_ch6_html <- read_html("/Users/gopal/Dropbox/Berkeley/Research/Resources and Other/FAO_evapotranspiration/Chapter 6 - ETc - Single crop coefficient (Kc).html")
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
fao_ch6_html %>%
html_node(xpath="/html/body/p[25]/table") %>%
html_table()
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table")
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table/tbody") %>%
html_table()
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[25]/table") %>%
html_table()
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]/table/tbody") %>%
html_table()
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]/table/tbody/tr[1]") %>%
html_table()
# river_flow_levels_html <- read_html("/Users/gopal/Dropbox/Notre Dame/Research/Indus/WAPDA_data/WAPDA_2017_18.html")
river_flow_levels_html <- read_html("http://www.wapda.gov.pk/index.php/component/content/article?tmpl=component&id=42")
river_flow_levels_html %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/table[1]/tbody/tr[2]")
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]/table/tbody/tr[1]") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]/table") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]/table[1") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]/table[1]") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12][1]") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12][[1]]") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[[12]]") #%>%
fao_ch6_html %>%
html_nodes(xpath="/html/body/p[12]") #%>%
?html_nodes
fao_ch6_html %>%
html_nodes(xpath="table") #%>%
fao_ch6_html %>%
html_nodes("tbody") #%>%
fao_ch6_html %>%
html_nodes(css="tbody") #%>%
fao_ch6_html %>%
html_nodes(css="table") #%>%
fao_ch6_html %>%
html_nodes(css="table")[[1]] #%>%
fao_ch6_html %>%
html_nodes(css="table")[1] #%>%
fao_ch6_html %>%
html_nodes(css="table")[1,] #%>%
fao_ch6_html %>%
html_nodes(css="table") %>%
html_table()
fao_ch6_html %>%
html_nodes(css="table") %>%
html_table(fill=TRUE)
fao_ch6_html %>%
html_nodes(css="table")# %>%
river_raw_1 <- fao_ch6_html %>%
html_nodes(css="table")# %>%
river_raw_1[1]
river_raw_1[1] %>%
html_table(fill=TRUE)
df <- river_raw_1[1] %>%
html_table(fill=TRUE)
df <- river_raw_1[1] %>%
html_table(fill=TRUE)
df
df <- river_raw_1[1] %>%
html_nodes(css="tr")#
df
df[1] %>%
html_table(fill=TRUE)
df[1] %>%
html_table()
dim(df)
length(df)
df <- river_raw_1[1] %>% html_table()
df <- river_raw_1[1] %>% html_table(fill=TRUE)
dim(df)
length(df)
class(df)
dim(df[[1]])
df <- river_raw_1[1] %>% html_table(fill=TRUE)[[1]]
df1 <- df[[1]]
View(df1)
df1 %>% filter(grepl("dry",X2))
df1 %>% filter(grepl("dry",X2),X9==Europe)
df1 %>% filter(grepl("dry",X2),X9=="Europe")
df1 %>% filter(grepl("dry",X2),X9=="Europe") %>% pull(X1)
?replace
df1 %>% setNames(slice(.,1))#filter(grepl("dry",X2),X9=="Europe") %>% pull(X1)
df1 <- df[[1]]%>% as_tibble()
df1 %>% setNames(slice(.,1))#filter(grepl("dry",X2),X9=="Europe") %>% pull(X1)
?html_table
df <- river_raw_1[1] %>% html_table(header=TRUE,fill=TRUE)
df1 <- df[[1]]%>% as_tibble()
df[[1]]
df1 <- df[[1]] %>% as_tibble()
df <- river_raw_1[1] %>% html_table(fill=TRUE)
df1 <- df[[1]] %>% as_tibble()
df1 %>% setNames(slice(.,1))#filter(grepl("dry",X2),X9=="Europe") %>% pull(X1)
df1 %>% setNames(slice(.,1)) %>% filter(-1)
?filter
df1 %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
df1 <- df[[1]] %>% as_tibble()
df1 %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
df1
df <- river_raw_1[1] %>% html_table(fill=TRUE)
df1 <- df[[1]] %>% as_tibble()
df1 %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
df <- river_raw_1[1] %>% html_table(fill=TRUE)
df1 %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
df <- river_raw_1[1] %>% html_table(fill=TRUE)
df1 %>%# setNames(slice(.,1)) %>%
filter(row_number()!=1)
df1 %>%# setNames(slice(.,1)) %>%
filter(grepl("dry",X2),row_number()!=1)
html_nodes(css="tr")#
df1 <- df[[1]] %>% as_tibble() %>% select(-1)
df1
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1))
df1
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
df1
df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1))
df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
?rename
df1 <- df[[1]] %>% as_tibble() %>% select(-1)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% filter(row_number()!=1)
df1 %>% filter(grepl("^\\-",Crop))
df1 %>% mutate(Crop_name=if_elsegrepl("^\\-",Crop),NA,Crop)
df1 %>% mutate(Crop_name=if_else(grepl("^\\-",Crop),NA,Crop))
grepl("^\\-",Crop)
df1
df1 %>% mutate(Crop_name=if_else(grepl("^\\-",Crop),NA,Crop))
df1 %>% mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop))
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name)
View(df1)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop = if_else(Crop_name==Crop,Crop,paste(Crop_name,Crop)))
View(df1)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_new_name = if_else(Crop_name==Crop,Crop,paste(Crop_name,Crop)))
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop))
View(df1)
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,NA)
)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,NA))
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA)))
View(df1)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group)
df1
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,Late (Llate)`,Total,`Plant Date`,Region)
View(df1)
df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) #%>%
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,Late (Llate)`,Total,`Plant Date`,Region)
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region)
View(df1)
ggplot(df1) + geom_boxplot(aes(Crop_group,Total))
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region) %>%
mutate(Total_num=as.numeric(Total))
ggplot(df1) + geom_boxplot(aes(Crop_group,Total_num))
ggplot(df1) + geom_boxplot(aes(Crop_group,Total_num)) + theme(axis.text.x=element_text(angle=45))
ggplot(df1) + geom_boxplot(aes(Crop_group,Total_num)) + theme(axis.text.x=element_text(angle=45,hjust=1))
ggplot(df1) + geom_boxplot(aes(Crop_group,Total_num)) + theme(axis.text.x=element_text(angle=45,hjust=1)) +
scale_y_continuous(limits=c(0,365))
df1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region) #%>%
df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]"),gsub(".*(year [12]).*","\\1",Crop_name),Crop_name),
Crop_name  = if_else(grepl("year [12]"),"Cassava",Crop_name)) %>%
mutate(Total_num=as.numeric(Total))
df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]"),gsub(".*(year [12]).*","\\1",Crop_name),Crop_name)) #,
df2 <- df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]"),gsub(".*(year [12]).*","\\1",Crop_name),Crop_name)) #,
df2 <- df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]",Crop_name),gsub(".*(year [12]).*","\\1",Crop_name),Crop_name)) #,
View(df2)
df2 <- df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]",Crop_name),gsub(".*(year [12]).*","\\1",Crop_name),Crop_name),
Crop_name  = if_else(grepl("year [12]"),"Cassava",Crop_name)) %>%
mutate(Total_num=as.numeric(Total))
df2 <- df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]",Crop_name),gsub(".*(year [12]).*","\\1",Crop_name),Crop_name),
Crop_name  = if_else(grepl("year [12]",Crop_name),"Cassava",Crop_name)) %>%
mutate(Total_num=as.numeric(Total))
View(df2)
df2 <- df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]",Crop_name),gsub(".*(year [12]).*","\\1",Crop_name),Crop_subcat),
Crop_name  = if_else(grepl("year [12]",Crop_name),"Cassava",Crop_name)) %>%
mutate(Total_num=as.numeric(Total))
View(df2)
river_raw_1
crop_stages <- river_raw_1[1] %>% html_table(fill=TRUE)
crop_stages1 <- df[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region) #%>%
crop_stages2 <- df1 %>% mutate(Crop_subcat= if_else(grepl("year [12]",Crop_name),gsub(".*(year [12]).*","\\1",Crop_name),Crop_subcat),
Crop_name  = if_else(grepl("year [12]",Crop_name),"Cassava",Crop_name)) %>%
mutate(Total_num=as.numeric(Total))
crop_coeff <- river_raw_1[2] %>% html_table(fill=TRUE)
crop_coeff
crop_stages <- river_raw_1[1] %>% html_table(fill=TRUE)
crop_stages1 <- crop_stages[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region) #%>%
crop_stages2 <- crop_stages1 %>% mutate(Crop_subcat= if_else(grepl("year [12]",Crop_name),gsub(".*(year [12]).*","\\1",Crop_name),Crop_subcat),
Crop_name  = if_else(grepl("year [12]",Crop_name),"Cassava",Crop_name)) %>%
mutate(Total_num=as.numeric(Total))
crop_coeff1 <- crop_coeff[[1]] %>% as_tibble() #%>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
crop_coeff1
crop_coeff1 <- crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region) #%>%
crop_coeff1 <- crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) #%>% # remove first "Crop" column, set header from 1st row
crop_coeff1
crop_coeff1 <- crop_coeff[[1]] %>% as_tibble() %>% select(-1) #%>% setNames(slice(.,1)) #%>% # remove first "Crop" column, set header from 1st row
crop_coeff1
crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
rename(Kcini=``)
crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>% setNames(slice(.,1)) %>% # remove first "Crop" column, set header from 1st row
rename(Kcini=` `)
slice(.,1)
setNames(slice(crop_coeff1,1))
slice(crop_coeff1,1)
replace(slice(crop_coeff1,1),"","Kcini")
slice(crop_coeff1,1)
slice(crop_coeff1,1)
gsub("","Kcini",slice(crop_coeff1,1))
gsub("^$","Kcini",slice(crop_coeff1,1))
crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>% setNames(gsub("^$","Kcini",slice(crop_coeff1,1)))
crop_coeff1 <- crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>%
setNames(gsub("^$","Kcini",slice(crop_coeff1,1))) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop)) %>% # create new Crop_name column, excluding only subcategories (- dry)
fill(Crop_name) %>%
mutate(Crop_subcat = if_else(Crop_name==Crop,as.character(NA),Crop)) %>%
mutate(Crop_group=if_else(Crop_name==Region,Crop_name,as.character(NA))) %>%
fill(Crop_group) %>% filter(Crop_group!=Region) %>%
select(Crop_group,Crop_name,Crop_subcat,`Init. (Lini)`,`Dev. (Ldev)`,`Mid (Lmid)`,`Late (Llate)`,Total,`Plant Date`,Region) #%>%
crop_coeff1
crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>%
setNames(gsub("^$","Kcini",slice(crop_coeff1,1))) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop))
crop_coeff1 <- crop_coeff[[1]] %>% as_tibble() %>% select(-1) %>%
setNames(gsub("^$","Kcini",slice(crop_coeff1,1))) %>% # remove first "Crop" column, set header from 1st row
filter(row_number()!=1) %>% # remove first row (containing headers)
mutate(Crop_name=if_else(grepl("^\\-",Crop),as.character(NA),Crop))
View(crop_coeff1)
tibble(crop=1:2,crop=3:4)
?as_tibble
crop_coeff[[1]] %>% as_tibble(.name_repair = "unique")
crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(crop_coeff1,1)))
crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(crop_coeff1,1))) %>% as_tibble(.name_repair = "unique")
crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1)))
crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique")
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2)
View(crop_coeff1)
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
fill(Crop_name)
View(crop_coeff1)
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
fill(Crop_name) %>%
mutate(Crop_subcat=if_else(Crop_subcat==Crop_name,as.character(NA),Crop_subcat))
View(crop_coeff1)
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
fill(Crop_name) %>%
mutate(Crop_subcat=if_else(Crop_subcat==Crop_name,as.character(NA),Crop_subcat))
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
mutate(Crop_name=if_else(Crop_name=="",as.character(NA),Crop_name)) %>%
fill(Crop_name) %>%
mutate(Crop_subcat=if_else(Crop_subcat==Crop_name,as.character(NA),Cr))
View(crop_coeff1)
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
mutate(Crop_name=if_else(Crop_name=="",as.character(NA),Crop_name)) %>%
fill(Crop_name) %>%
mutate(Crop_subcat=if_else(Crop_subcat==Crop_name,as.character(NA),Crop_subcat))
View(crop_coeff1)
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
mutate(Crop_name=if_else(Crop_name=="",as.character(NA),Crop_name)) %>%
fill(Crop_name) %>%
mutate(Crop_subcat=if_else(Crop_subcat==Crop_name,as.character(NA),Crop_subcat),
Crop_group=if_else(grepl("^[a-z]\\.",Crop_name),Crop_name,as.character(NA)))
View(crop_coeff1)
crop_coeff1 <- crop_coeff[[1]] %>% #select(-1) %>%
setNames(gsub("^$","Kcini",slice(.,1))) %>% as_tibble(.name_repair = "unique") %>%
rename(Crop_name=Crop...1,Crop_subcat=Crop...2) %>%
filter(row_number()!=1) %>%
mutate(Crop_name=if_else(Crop_name=="",as.character(NA),Crop_name)) %>%
fill(Crop_name) %>%
mutate(Crop_subcat=if_else(Crop_subcat==Crop_name,as.character(NA),Crop_subcat),
Crop_group=if_else(grepl("^[a-z]\\.",Crop_name),Crop_name,as.character(NA))) %>%
fill(Crop_group)
View(crop_coeff1)
crop_coeff1
