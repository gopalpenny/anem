filter(max_mirror_dist<roi)
well_images
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=100,Ksat=1,aquifer_type="confined",length.out=50)
get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,aquifer_type=aquifer_type)
devtools::load_all(".")
?plot_bounds_behavior
wells_noimages <- data.frame(x0=c(5,0.5),y0=c(2.5,0.25),rate=c(0.5,-0.2),diam=c(0.75,0.8)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(0.3,10,-2.5,0.1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=image_wells,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=100,Ksat=1,aquifer_type="confined",length.out=50)
Ksat
h0=100
Ksat=1
aquifer_type="confined"
length.out=50
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
z0=NA
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
devtools::load_all(".")
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
rm(get_bounds_behavior)
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
?plot_bounds_behavior
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=image_wells,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
?plot_bounds_behavior
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
well_images
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2)
well_images
?plot_bounds_behavior
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
well_images
generate_image_wells(wells_noimages,bounds,num_levels=2)
generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
well_images
well_images  %>% filter(max_mirror_dist<roi)
well_image
well_images
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2)
well_images
dim(generate_image_wells(wells,bounds,num_levels=1))
devtools::load_all(".")
dim(generate_image_wells(wells,bounds,num_levels=1))
dim(generate_image_wells(wells,bounds,num_levels=1))
devtools::load_all(".")
dim(generate_image_wells(wells,bounds,num_levels=1))
generate_image_wells(wells,bounds,num_levels=1)
wells <- data.frame(x0=c(0,0.5),y0=c(0,0.25),rate=c(0.5,-0.2),diam=c(0.75,0.8))
bounds <- data.frame(m=c(1,-1),b=c(0.5,1),bound_type=c("CH","NF"),bID=c(1,2))
if (!max(grepl("^pID$",names(wells)))) { # generate pID's if they are not present
wells <- wells %>% dplyr::mutate(pID=dplyr::row_number())
}
?plot_bounds_behavior
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
well_images
gplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=1000,t=630720000,n=0.4,method="aravin-numerov"))
wells_noimages
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))
wells_noimages
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=10,t=630720000,n=0.4,method="aravin-numerov"))
?get_radius_of_influence
data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=10,t=630720000,n=0.4,method="aravin-numerov"))
data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.000001,h=10,t=630720000,n=0.4,method="aravin-numerov"))
data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.00001,h=10,t=630720000,n=0.4,method="aravin-numerov"))
#' Plot behavior on boundaries
#'
#' Plot behavior on boundaries with and without well images
#' @inheritParams get_bounds_behavior
#' @return Two ggplot objects that show behavior on the boundaries, one for head and one for flow
#' @importFrom magrittr %>%
#' @examples
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.00001,h=10,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
generate_image_wells(wells_noimages,bounds,num_levels=2)
data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.000005,h=10,t=630720000,n=0.5,method="aravin-numerov"))
data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0000005,h=10,t=630720000,n=0.5,method="aravin-numerov"))
(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0000005,h=10,t=630720000,n=0.5,
#' Plot behavior on boundaries
#'
#' Plot behavior on boundaries with and without well images
#' @inheritParams get_bounds_behavior
#' @return Two ggplot objects that show behavior on the boundaries, one for head and one for flow
#' @importFrom magrittr %>%
#' @examples
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0000005,h=10,t=630720000,n=0.5,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=4) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
well_images
#' Plot behavior on boundaries
#'
#' Plot behavior on boundaries with and without well images
#' @inheritParams get_bounds_behavior
#' @return Two ggplot objects that show behavior on the boundaries, one for head and one for flow
#' @importFrom magrittr %>%
#' @examples
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0000005,h=10,t=630720000,n=0.5,method="aravin-numerov"))  # 630720000 - 20 years
wells_noimages
#' Plot behavior on boundaries
#'
#' Plot behavior on boundaries with and without well images
#' @inheritParams get_bounds_behavior
#' @return Two ggplot objects that show behavior on the boundaries, one for head and one for flow
#' @importFrom magrittr %>%
#' @examples
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0000005,h=10,t=630720000,n=0.5,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=4) %>%
filter(max_mirror_dist<roi)
well_images
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=4) %>%
filter(max_mirror_dist<roi) %>% as_tibble()
#' Plot behavior on boundaries
#'
#' Plot behavior on boundaries with and without well images
#' @inheritParams get_bounds_behavior
#' @return Two ggplot objects that show behavior on the boundaries, one for head and one for flow
#' @importFrom magrittr %>%
#' @examples
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>% as_tibble() %>%
mutate(roi=get_radius_of_influence(Ksat=0.0000005,h=10,t=630720000,n=0.5,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=4) %>%
filter(max_mirror_dist<roi)
well_images
generate_image_wells(wells_noimages,bounds,num_levels=5)
generate_image_wells(wells_noimages,bounds,num_levels=5) %>%
filter(max_mirror_dist<roi)
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=5) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=6) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type)
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,aquifer_type="confined",length.out=50)
bounds_wide <- get_quad_vertices_wide(bounds)
bounds_seq <- do.call(rbind,lapply(split(bounds_wide,bounds_wide$bID),get_bound_seq,length.out=length.out))
bounds_wide
bounds
get_quad_vertices_wide(bounds)
get_quad_vertices(bounds)
get_quad_vertices(bounds) %>% filter(!is.na(x)) %>% group_by(bID)
get_quad_vertices(bounds) %>% filter(!is.na(x))
bounds
if (max(grepl("sf",class(bounds)))) {
bounds <- bounds %>% sf::st_set_geometry(NULL)
}
if (min(c('m','b') %in% names(bounds))) {
bounds_w_slope <- bounds %>% dplyr::select(m,b,bID)
} else if (min(c('x1','x2','y1','y2') %in% names(bounds))) {
bounds_w_slope <- bounds %>%
dplyr::mutate(m=(y2-y1)/(x2-x1),
b=y1 - m*x1) %>% dplyr::select(m,b,bID)
}
bounds_w_slope
vertices <- bounds_w_slope %>%
tidyr::crossing(bounds_w_slope %>% dplyr::rename(m2=m,b2=b,bID2=bID)) %>%
dplyr::mutate(x=round(get_intersection(m,b,m2,b2)$x,14), # round to avoid math errors that make points seem different
y=round(get_intersection(m,b,m2,b2)$y,14)) %>%
dplyr::select(bID,bID2,x,y) %>% dplyr::filter(!is.nan(x),abs(x)!=Inf)
vertices
vertices_of_quad_midpoints <- vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices_of_quad_midpoints
segments_remaining <- vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID) %>%
dplyr::summarize(n=dplyr::n()) %>%
dplyr::filter(n==1)
segments_remaining
vertices_of_quad <- vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID")) %>%
dplyr::bind_rows(vertices_of_quad_midpoints) %>%
dplyr::select(-orig,-bID) %>% dplyr::distinct()# %>% mutate(keep=TRUE)
vertices_of_quad
quad_vertices_full <- vertices %>% dplyr::inner_join(vertices_of_quad,by=c("x","y")) %>%
dplyr::rename(intersection_bID=bID2) %>%
tidyr::complete(bID,intersection_bID) %>%
dplyr::filter(bID!=intersection_bID)
quad_vertices_full
segments_remaining
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y"))
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y"))
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
bounds_w_slope %>%
tidyr::crossing(bounds_w_slope %>% dplyr::rename(m2=m,b2=b,bID2=bID)) %>%
dplyr::mutate(x=round(get_intersection(m,b,m2,b2)$x,14), # round to avoid math errors that make points seem different
y=round(get_intersection(m,b,m2,b2)$y,14))
bounds_w_slope %>%
tidyr::crossing(bounds_w_slope %>% dplyr::rename(m2=m,b2=b,bID2=bID)) %>%
dplyr::mutate(x=round(get_intersection(m,b,m2,b2)$x,14), # round to avoid math errors that make points seem different
y=round(get_intersection(m,b,m2,b2)$y,14)) %>%
dplyr::select(bID,bID2,x,y) %>% dplyr::filter(!is.nan(x),abs(x)!=Inf)
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices_of_quad_midpoints <- vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID) %>%
dplyr::summarize(n=dplyr::n())
vertices_of_quad_midpoints
vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct()
vertices_of_quad_midpoints
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y"))
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y)
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y"))
vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices_of_quad_midpoints
vertices_of_quad_midpoints <- vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices_of_quad_midpoints
segments_remaining <- vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID) %>%
dplyr::summarize(n=dplyr::n()) %>%
dplyr::filter(n==1)
segments_remaining
vertices_of_quad_midpoints
vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct()
vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID)
vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID) %>%
dplyr::summarize(n=dplyr::n())
vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID) %>%
dplyr::summarize(n=dplyr::n()) %>%
dplyr::filter(n==1)
segments_remaining
vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID")) %>%
dplyr::bind_rows(vertices_of_quad_midpoints) %>%
dplyr::select(-orig,-bID) %>% dplyr::distinct()# %>% mutate(keep=TRUE)
quad_vertices_full <- vertices %>% dplyr::inner_join(vertices_of_quad,by=c("x","y"))
vertices_of_quad <- vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID")) %>%
dplyr::bind_rows(vertices_of_quad_midpoints) %>%
dplyr::select(-orig,-bID) %>% dplyr::distinct()# %>% mutate(keep=TRUE)
vertices_of_quad
vertices_of_quad <- vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID")) %>%
dplyr::bind_rows(vertices_of_quad_midpoints) %>%
dplyr::select(-orig,-bID) %>% dplyr::distinct()# %>% mutate(keep=TRUE)
vertices_of_quad
vertices_of_quad$x
vertices_of_quad$Y
vertices_of_quad$y
vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID")) %>%
dplyr::bind_rows(vertices_of_quad_midpoints) %>%
dplyr::select(-orig,-bID) %>% dplyr::distinct()
vertices %>% dplyr::inner_join(vertices_of_quad,by=c("x","y"))
vertices <- bounds_w_slope %>%
tidyr::crossing(bounds_w_slope %>% dplyr::rename(m2=m,b2=b,bID2=bID)) %>%
dplyr::mutate(x=round(get_intersection(m,b,m2,b2)$x,10), # round to avoid math errors that make points seem different
y=round(get_intersection(m,b,m2,b2)$y,10)) %>%
dplyr::select(bID,bID2,x,y) %>% dplyr::filter(!is.nan(x),abs(x)!=Inf)
vertices_of_quad_midpoints <- vertices %>%
dplyr::group_by(bID) %>%
dplyr::summarize(X=get_point_on_quandrangle(x,y,"x"),
Y=get_point_on_quandrangle(x,y,"y")) %>%
dplyr::rename(x=X,y=Y) %>%
dplyr::left_join(vertices,by=c("bID","x","y")) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID"))
segments_remaining <- vertices_of_quad_midpoints %>%
dplyr::select(-orig) %>%
dplyr::distinct() %>%
dplyr::group_by(bID) %>%
dplyr::summarize(n=dplyr::n()) %>%
dplyr::filter(n==1)
vertices_of_quad <- vertices %>%
dplyr::filter(bID==segments_remaining$bID[1],bID2==segments_remaining$bID[2]) %>%
tidyr::gather(orig,bID,dplyr::starts_with("bID")) %>%
dplyr::bind_rows(vertices_of_quad_midpoints) %>%
dplyr::select(-orig,-bID) %>% dplyr::distinct()# %>% mutate(keep=TRUE)
quad_vertices_full <- vertices %>% dplyr::inner_join(vertices_of_quad,by=c("x","y")) %>%
dplyr::rename(intersection_bID=bID2) %>%
tidyr::complete(bID,intersection_bID) %>%
dplyr::filter(bID!=intersection_bID)
vertices_of_quad
quad_vertices_full <- vertices %>% dplyr::inner_join(vertices_of_quad,by=c("x","y")) %>%
dplyr::rename(intersection_bID=bID2) %>%
tidyr::complete(bID,intersection_bID) %>%
dplyr::filter(bID!=intersection_bID)
quad_vertices_full
devtools::load_all(".")
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
devtools::load_all(".")
get_bounds_b
get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
bounds_wide <- get_quad_vertices_wide(bounds)
bounds_wide
rm(get_quad_vertices_wide)
get_quad_vertices_wide(bounds)
bounds_wide <- get_quad_vertices_wide(bounds)
bounds_seq <- do.call(rbind,lapply(split(bounds_wide,bounds_wide$bID),get_bound_seq,length.out=length.out))
head <- get_hydraulic_head(bounds_seq,wells,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type)
get_hydraulic_head(bounds_seq,wells,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type)
bounds_seq
wells
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
bounds_seq <- do.call(rbind,lapply(split(bounds_wide,bounds_wide$bID),get_bound_seq,length.out=length.out))
bounds_seq
h0
Ksat
z0
aquifer_type
z0 <- 10
head <- get_hydraulic_head(bounds_seq,wells,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type)
dP <- get_potential(loc,wells,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type)
?get_hydraulic_head
wells <- data.frame(x0=c(0,0.5),y0=c(0,0.25),rate=c(1e-4,-2e-4),diam=c(0.75,0.8),roi=c(300,300))
get_potential(wells,loc=c(50,50),Ksat=0.00001,z0=10,aquifer_type="confined")
get_potential(wells,loc=c(50,50),Ksat=0.00001,aquifer_type="unconfined")
wells <- data.frame(x0=c(0,0.5),y0=c(0,0.25),rate=c(1e-3,-2e-3),diam=c(0.75,0.8),roi=c(300,300))
get_hydraulic_head(wells,loc=c(5,5),h0=0,Ksat=0.00001,z0=30,aquifer_type="confined")
get_hydraulic_head(wells,loc=c(5,5),h0=30,Ksat=0.00001,aquifer_type="unconfined")
grid_pts <- expand.grid(x=seq(0,10,by=5),y=seq(0,10,by=5))
get_hydraulic_head(wells,loc=grid_pts,h0=30,Ksat=0.00001,aquifer_type="unconfined")
bounds_behavior_noim <- get_bounds_behavior(wells_noimages,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="no_images")
bounds_behavior_wim <- get_bounds_behavior(well_images,bounds,h0=h0,Ksat=Ksat,z0=z0,aquifer_type=aquifer_type) %>%
dplyr::mutate(im="images")
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,aquifer_type="confined",length.out=50)
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,z0=20,aquifer_type="confined",length.out=50)
devtools::load_all(".")
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,z0=20,aquifer_type="confined",length.out=50)
gg_list$p_h
?get_hydraulic_head
?plot_bounds_behavior
wells_noimages <- data.frame(x0=c(50,5),y0=c(25,2.5),rate=c(0.5,-0.2),diam=c(0.05,0.08)) %>%
mutate(roi=get_radius_of_influence(Ksat=0.0001,h=100,t=630720000,n=0.4,method="aravin-numerov"))  # 630720000 - 20 years
bounds <- tibble(bound_type=c("CH","NF","NF","NF"),
m=c(0.8,-1.25,0.8,-1.25),b=c(3,100,-25,1),
bID=as.numeric(1:4),bGroup=c(2,1,2,1))
well_images <- generate_image_wells(wells_noimages,bounds,num_levels=2) %>%
filter(max_mirror_dist<roi)
ggplot() + geom_point(data=well_images,aes(x0,y0)) +
geom_abline(data=bounds,aes(slope=m,intercept=b)) + coord_equal()
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=100,Ksat=1,aquifer_type="confined",length.out=50)
?plot_bounds_behavior
devtools::load_all(".")
devtools::load_all(".")
?plot_bounds_behavior
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,z0=NA,aquifer_type="confined",length.out=50)
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,aquifer_type="confined",length.out=50)
gg_list <- plot_bounds_behavior(wells_noimages,image_wells,bounds,h0=1000,Ksat=1,z0=100,aquifer_type="confined",length.out=50)
gg_list$p_h
gg_list$p_f
