library(sf)
# devtools::install_github("https://github.com/gopalpenny/anem")
# devtools::load_all("~/Projects/R_packages/anem")
library(anem)
# Create a grid of locations
loc <- crossing(x=seq(-200,200,length.out=201),y=seq(-200,200,length.out=201))
aquifer <- define_aquifer("confined",1e-4,z0=20,h0=0)
constant_head_boundary <- loc %>%
dplyr::bind_cols(streamfunction=get_stream_function(loc,wells_constant_head,aquifer)) %>%
dplyr::bind_cols(head=get_hydraulic_head(loc,wells_constant_head,aquifer))
ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20) +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal()
thm <- theme(axis.text=element_blank(),axis.title=element_blank(),axis.ticks=element_blank(),
panel.background = element_rect(fill=NA,color="black"))
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20) +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal()
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50) +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal()
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50) +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
p_NF
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="black") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="black") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
p_NF
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="darkgray") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkgray") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
p_NF
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="black") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
p_NF
grid.arrange(p_CH,p_NF)
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="black") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="black") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm
grid.arrange(p_CH,p_NF)
gridExtra::grid.arrange(p_CH,p_NF)
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="black") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="black") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="blue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="blue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary")
p_NF
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="blue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
?theme
thm <- theme(axis.text=element_blank(),axis.title=element_blank(),axis.ticks=element_blank(),
panel.background = element_rect(fill=NA,color="black"),
panel.border = element_rect(fill=NA,color="black"))
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="blue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=20,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=20,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=15,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_CH
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=12,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=12,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=15,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_CH
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=10,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_CH
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=12,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_CH
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=13,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_CH
thm <- theme(axis.text=element_blank(),axis.title=element_blank(),axis.ticks=element_blank(),
panel.background = element_rect(fill=NA,color="black"),
panel.border = element_rect(fill=NA,color="black"),
plot.title = element_text(size=12))
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=13,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_CH
ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=30,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=13,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=50,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=25,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=50,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=25,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=25,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
?egg::ggarrange
install.packages("egg")
?egg::ggarrange
usethis::use_data_raw("anem_scenarios")
?define_wells
?define_wells
library(anem)
library(anem)
?define_wells
?get_drawdown_relationships
# define wells and well images
set.seed(30)
wells_df <- data.frame(x=runif(8,0,1000),y=runif(8,0,1000),diam=1) %>%
mutate(R=1000,  # t = 1 year
country=factor(y>500,levels=c(F,T),labels=c("A","B"))) %>%
group_by(country) %>%
mutate(weights=1,Q=1/n()) %>% group_by()
wells <- define_wells(wells_df) %>% generate_image_wells(aquifer_unconfined)
usethis::use_data("anem_scenarios")
wells_example <- data.frame(x=runif(8,0,1000),y=runif(8,0,1000),diam=1) %>%
mutate(R=1000,  # t = 1 year
country=factor(y>500,levels=c(F,T),labels=c("A","B"))) %>%
group_by(country) %>%
mutate(weights=1,Q=1/n()) %>% group_by()
wells_example
wells_example <- data.frame(x=runif(8,0,1000),y=runif(8,0,1000),diam=1) %>%
mutate(R=1000,  # t = 1 year
country=factor(y>500,levels=c(F,T),labels=c("A","B"))) %>%
group_by(country) %>%
mutate(weights=1,Q=1/n()) %>% group_by()
library(magrittr)
library(tidyverse)
# define wells and well images
set.seed(30)
wells_example <- data.frame(x=runif(8,0,1000),y=runif(8,0,1000),diam=1) %>%
mutate(R=1000,  # t = 1 year
country=factor(y>500,levels=c(F,T),labels=c("A","B"))) %>%
group_by(country) %>%
mutate(weights=1,Q=1/n()) %>% group_by()
wells_example
aquifer_example <- define_aquifer("unconfined",1e-3,bounds=bounds_df,h0=100,z0=10)
wells_example <- data.frame(x=runif(8,0,1000),y=runif(8,0,1000),diam=1) %>%
mutate(R=1000,  # t = 1 year
country=factor(y>500,levels=c(F,T),labels=c("A","B"))) %>%
group_by(country) %>%
mutate(weights=1,Q=1/n()) %>% group_by()
wells_example
bounds_example
bounds_example <- data.frame(bound_type=c("CH","NF","NF","NF"),m=c(Inf,0,Inf,0),b=c(0,1000,1000,0))
aquifer_example <- define_aquifer("unconfined",1e-3,bounds=bounds_example,h0=100,z0=10)
bounds_example
aquifer_example
source('~/Projects/R_packages/anem/data-raw/anem_scenarios.R', echo=TRUE)
usethis::use_vignette("anem-demonstration")
library(tidyverse)
library(sf)
# devtools::install_github("https://github.com/gopalpenny/anem")
# devtools::load_all("~/Projects/R_packages/anem")
library(anem)
# define wells and well images
wells_actual <- define_wells(wells_example)
wells <- wells_actual %>% generate_image_wells(aquifer_unconfined)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width=4,
fig.height=2.5
)
library(anem)
library(tidyverse)
library(sf)
# devtools::install_github("https://github.com/gopalpenny/anem")
# devtools::load_all("~/Projects/R_packages/anem")
library(anem)
# Create a grid of locations
loc <- crossing(x=seq(-200,200,length.out=201),y=seq(-200,200,length.out=201))
# Constant head boundary
wells_constant_head <- define_wells(x=c(-100,100),y=c(-0,0),Q=c(1e-2,-1e-2),diam=c(0.1,0.1),R=c(500,500))
aquifer <- define_aquifer("confined",1e-4,z0=20,h0=0)
constant_head_boundary <- loc %>%
dplyr::bind_cols(streamfunction=get_stream_function(loc,wells_constant_head,aquifer)) %>%
dplyr::bind_cols(head=get_hydraulic_head(loc,wells_constant_head,aquifer))
# No flow boundary
wells_no_flow <- define_wells(x=c(-100,100),y=c(-0,0),Q=c(-1e-2,-1e-2),diam=c(0.1,0.1),R=c(500,500))
no_flow_boundary <- loc %>%
dplyr::bind_cols(streamfunction=get_stream_function(loc,wells_no_flow,aquifer)) %>%
dplyr::bind_cols(head=get_hydraulic_head(loc,wells_no_flow,aquifer))
thm <- theme(axis.text=element_blank(),axis.title=element_blank(),axis.ticks=element_blank(),
panel.background = element_rect(fill=NA,color="black"),
panel.border = element_rect(fill=NA,color="black"),
plot.title = element_text(size=10))
p_CH <- ggplot() +
geom_contour(data=constant_head_boundary,aes(x,y,z=head),bins=50,linetype="dashed",color="black") +
geom_contour(data=constant_head_boundary,aes(x,y,z=streamfunction),bins=25,color="darkblue") +
geom_point(data=wells_constant_head,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.15),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("Constant head boundary at x = 0")
p_NF <- ggplot() +
geom_contour(data=no_flow_boundary,aes(x,y,z=head),bins=25,linetype="dashed",color="black") +
geom_contour(data=no_flow_boundary,aes(x,y,z=streamfunction),bins=50,color="darkblue") +
geom_point(data=wells_no_flow,aes(x,y,fill=well_type),size=3,shape=21) +
theme(legend.position=c(0.8,0.1),legend.title=element_blank()) +
coord_equal() + thm + ggtitle("No flow boundary at x = 0")
gridExtra::grid.arrange(p_CH,p_NF,nrow=1)
library(tidyverse)
library(sf)
# devtools::install_github("https://github.com/gopalpenny/anem")
# devtools::load_all("~/Projects/R_packages/anem")
library(anem)
# define aquifer
aquifer <- define_aquifer("unconfined",1e-3,bounds=bounds_example,h0=100)
# define wells and well images
wells_actual <- define_wells(wells_example)
wells <- wells_actual %>% generate_image_wells(aquifer)
ggplot() +
geom_segment(data=aquifer_unconfined$bounds,aes(x1,y1,xend=x2,yend=y2,color=bound_type)) +
geom_abline(slope=0,intercept=500,linetype="dashed") +
geom_point(data=wells_actual,aes(x,y,fill=country),shape=21) +
coord_equal()
ggplot() +
geom_segment(data=aquifer$bounds,aes(x1,y1,xend=x2,yend=y2,color=bound_type)) +
geom_abline(slope=0,intercept=500,linetype="dashed") +
geom_point(data=wells_actual,aes(x,y,fill=country),shape=21) +
coord_equal()
drawdown_relationships <- get_drawdown_relationships(wells, aquifer_unconfined, country, weights)
drawdown_relationships <- get_drawdown_relationships(wells, aquifer, country, weights)
drawdown_relationships %>%
knitr::kable("html") #%>% kableExtra::kable_styling()
gridded <- get_gridded_hydrodynamics(wells,aquifer_unconfined,c(20,20),c(8,8))
source('~/Projects/R_packages/anem/data-raw/anem_scenarios.R', echo=TRUE)
wells_example
source('~/Projects/R_packages/anem/data-raw/anem_scenarios.R', echo=TRUE)
wells_example
library(anem)
pwd
setwd("~/Projects/GangesBrahmaputraProject/gbb_github/src/ganges_proj")
library(shiny); runApp('inst/shiny-examples/anem_basic.R')
runApp('inst/shiny-examples/anem_basic.R')
?coerceValue
wells_ORIG[i, j]
wells_ORIG[1,1]
# how to include Shiny in R package: https://deanattali.com/2015/04/21/r-package-shiny-app/
set.seed(30)
wells_ORIG <-  data.frame(x=round(runif(8,0,1000),3),y=round(runif(8,0,1000),3),diam=1) %>%
dplyr::mutate(R=1000,  # t = 1 year
country=as.character(factor(y>500,levels=c(F,T),labels=c("A","B")))) %>%
dplyr::group_by(country) %>%
dplyr::mutate(weights=1,Q=round(1/dplyr::n(),2),) %>% dplyr::group_by() %>%
define_wells() #%>% generate_image_wells(aquifer_unconfined)
wells_ORIG[1,1]
wells_ORIG[1,3]
wells_ORIG[1,4]
wells_ORIG[1,5]
runApp('inst/shiny-examples/anem_basic.R')
source('~/.active-rstudio-document', echo=TRUE)
runApp('inst/shiny-examples/anem_basic.R')
runApp('inst/shiny-examples/anem_basic.R')
runApp('inst/shiny-examples/anem_basic.R')
runApp('inst/shiny-examples/anem_basic.R')
wells_ORIG <-  data.frame(x=round(runif(8,0,1000),3),y=round(runif(8,0,1000),3),diam=1) %>%
dplyr::mutate(R=1000,  # t = 1 year
country=as.character(factor(y>500,levels=c(F,T),labels=c("A","B")))) %>%
dplyr::group_by(country) %>%
dplyr::mutate(weights=1,Q=round(1/dplyr::n(),2),) %>% dplyr::group_by() %>%
define_wells() %>% as.data.frame() #%>% generate_image_wells(aquifer_unconfined)
runApp('inst/shiny-examples/anem_basic.R')
wells
wells_ORIG <-  data.frame(x=round(runif(8,0,1000),3),y=round(runif(8,0,1000),3),diam=1) %>%
dplyr::mutate(R=1000,  # t = 1 year
country=as.character(factor(y>500,levels=c(F,T),labels=c("A","B")))) %>%
dplyr::group_by(country) %>%
dplyr::mutate(weights=1,Q=round(1/dplyr::n(),2),) %>% dplyr::group_by() %>%
define_wells() %>% as.data.frame() #%>% generate_image_wells(aquifer_unconfined)
wells_ORIG
wells_ORIG[1,1] <- 2
wells_ORIG
wells_ORIG[1,2] <- 5
wells_ORIG
class(wells_ORIG[1,1])
class(wells_ORIG[1,4])
class(wells_ORIG[1,5])
class(wells_ORIG[1,6])
class(wells_ORIG[1,7])
runApp('inst/shiny-examples/anem_basic.R')
runApp('inst/shiny-examples/anem_basic.R')
runApp('inst/shiny-examples/anem_shiny.R')
runApp('inst/shiny-examples/anem_shiny.R')
library(shiny); runApp('inst/shiny-examples/anem_shiny.R')
library(shiny); runApp('inst/shiny-examples/anem_shiny.R')
?fluidRow
runApp('inst/shiny-examples/anem_shiny.R')
?brushOpts
runApp('inst/shiny-examples/anem_shiny.R')
runApp('anem_shiny.R')
runApp('inst/shiny-examples/anem_shiny.R')
library(shiny); runApp('inst/shiny-examples/anem_shiny.R')
ui <- fluidPage(
br(),
column(8,leafletOutput("map", height="600px")),
column(4,br(),br(),br(),br(),plotOutput("plot", height="300px")),
br()
)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("leafle")
install.packages("leaflet")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("leaflet")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
shinyApp(ui,server)
runApp('inst/shiny-examples/leaflet_example_map_click.R')
install.packages("htmlwidget")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library(shiny); runApp('inst/shiny-examples/leaflet_example_map_click.R')
source('~/.active-rstudio-document', echo=TRUE)
